!!! 5
%html{ lang: I18n.locale }
  %head
    %meta{ charset: 'utf-8' }/
    %meta{ name: 'viewport', content: 'width=device-width, initial-scale=1' }/

    - if cdn_host?
      %link{ rel: 'dns-prefetch', href: cdn_host }/

    - if storage_host?
      %link{ rel: 'dns-prefetch', href: storage_host }/

    %link{ rel: 'icon', href: favicon_path, type: 'image/x-icon' }/
    %link{ rel: 'apple-touch-icon', sizes: '180x180', href: '/apple-touch-icon.png' }/
    %link{ rel: 'mask-icon', href: '/mask-icon.svg', color: '#2B90D9' }/
    %link{ rel: 'manifest', href: '/manifest.json' }/
    %meta{ name: 'msapplication-config', content: '/browserconfig.xml' }/
    %meta{ name: 'theme-color', content: '#282c37' }/
    %meta{ name: 'apple-mobile-web-app-capable', content: 'yes' }/

    %title= content_for?(:page_title) ? safe_join([yield(:page_title).chomp.html_safe, title], ' - ') : title

    = stylesheet_pack_tag 'common', media: 'all'
    = stylesheet_pack_tag current_theme, media: 'all'
    = javascript_pack_tag 'common', integrity: true, crossorigin: 'anonymous'
    = javascript_pack_tag "locale_#{I18n.locale}", integrity: true, crossorigin: 'anonymous'
    = csrf_meta_tags
    %meta{ name: 'style-nonce', content: request.content_security_policy_nonce }

    = stylesheet_link_tag '/inert.css', skip_pipeline: true, media: 'all', id: 'inert-style'

    - if Setting.custom_css.present?
      = stylesheet_link_tag custom_css_path, media: 'all'
    
    - unless current_emoji_size_simple.nil?
      :css
        .status__content .emojione, .reply-indicator__content .emojione {
          width: #{current_emoji_size_simple}px;
          height: #{current_emoji_size_simple}px;
          margin: 0ex .1em 0ex;
        }
    - unless current_emoji_size_detailed.nil?
      :css
        .detailed-status .status__content .emojione {
          width: #{current_emoji_size_detailed}px;
          height: #{current_emoji_size_detailed}px;
          margin: 0ex .1em 0ex;
        }
    - unless current_emoji_size_name.nil?
      :css
        .emojione {
          width: #{current_emoji_size_name}px;
          height: #{current_emoji_size_name}px;
          margin: 0ex .1em 0ex;
        }
    
    - unless current_bbcode_spin
      :css
        .bbcode__spin {
          -webkit-animation: none !important;
          animation: none !important;
        }
    
    - unless current_bbcode_pulse
      :css
        .bbcode__pulse {
          -webkit-animation: none !important;
          animation: none !important;
        }
        
    - unless current_bbcode_large
      :css
        .status__content .fa-2x, .status__content .fa-3x, .status__content .fa-4x, .status__content .fa-5x {
          font-size: inherit !important;
        }
        
    - unless current_bbcode_size
      :css
        .status__content span:not(.fa-2x, .fa-3x, .fa-4x, .fa-5x) {
          font-size: inherit !important;
        }
        
    - unless current_bbcode_color
      :css
        .status__content span {
          color: inherit !important;
        }
        
    - unless current_bbcode_flip
      :css
        .status__content .fa-flip-vertical .fa-flip-horizontal {
          -webkit-transform: none !important;
          transform: none !important;
        }
    
    - unless current_bbcode_flip
      :css
        .status__content .fa-flip-vertical .fa-flip-horizontal {
          -webkit-transform: none !important;
          transform: none !important;
        }
        
    - unless current_bbcode_b
      :css
        .bbcode__b {
          font-weight: inherit !important;
        }
        
    - unless current_bbcode_i
      :css
        .bbcode__i {
          font-style: inherit !important;
          -webkit-font-feature-settings: inherit !important;
          font-feature-settings: inherit !important;
        }
        
    - unless current_bbcode_u
      :css
        .status__content u {
          text-decoration: none !important;
        }
        
    - unless current_bbcode_s
      :css
        .status__content span {
          text-decoration: none !important;
        }

    = yield :header_tags

  %body{ class: body_classes }
    = content_for?(:content) ? yield(:content) : yield

    .logo-resources
      = render file: Rails.root.join('app', 'javascript', 'images', 'logo_transparent.svg')
      = render file: Rails.root.join('app', 'javascript', 'images', 'logo_full.svg')
